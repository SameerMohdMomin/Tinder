{"version":3,"sources":["component/Header.js","axios.js","component/TinderCards.js","component/SwipeButton.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","instance","axios","create","baseURL","TinderCards","useState","people","setPeople","useEffect","a","get","req","data","fetchData","map","person","preventSwipe","onSwipe","dir","nameToDelete","name","console","log","onCardLeftScreen","style","backgroundImage","imgUrl","SwipeButton","IconButton","fontSize","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAyBeA,MApBf,WACI,OACI,sBAAKC,UAAU,SAAf,UAEI,qBAAKA,UAAU,cAAf,SACI,cAAC,IAAD,UACI,cAAC,IAAD,QAGR,qBAAKA,UAAU,gBAAf,SACI,qBAAKA,UAAU,OAAOC,IAAI,uEAE9B,qBAAKD,UAAU,eAAf,SACI,cAAC,IAAD,U,kECXDE,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAS,2CCkDEC,MAlDf,WAAuB,IAAD,EACWC,mBAAS,IADpB,mBACXC,EADW,KACFC,EADE,KAsBlB,OAnBAC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEACqBR,EAAMS,IAAI,iBAD/B,OACUC,EADV,OAGIJ,EAAUI,EAAIC,MAHlB,4CADY,uBAAC,WAAD,wBAOZC,MAaA,qBAAKf,UAAU,aAAf,SACI,qBAAKA,UAAU,2BAAf,SACKQ,EAAOQ,KAAI,SAACC,GAAD,OACR,cAAC,IAAD,CACAjB,UAAU,QAEVkB,aAAc,CAAC,KAAO,QACtBC,QAAS,SAACC,GAAD,OAjBEC,EAiBmBJ,EAAOK,UAhBjDC,QAAQC,IAAI,cAAgBH,GADjB,IAAYA,GAkBXI,iBAAkB,kBAbdH,EAa+BL,EAAOK,UAZtDC,QAAQC,IAAIF,EAAO,mBADJ,IAACA,GAQJ,SAQA,qBACAI,MAAO,CAAEC,gBAAgB,OAAD,OAASV,EAAOW,OAAhB,MACxB5B,UAAU,OAFV,SAII,6BAAKiB,EAAOK,UAVXL,EAAOK,c,mGCUjBO,MA9Bf,WACI,OACI,sBAAK7B,UAAU,cAAf,UACI,cAAC8B,EAAA,EAAD,CAAY9B,UAAU,qBAAtB,SACI,cAAC,IAAD,CAAW+B,SAAS,YAGxB,cAACD,EAAA,EAAD,CAAY9B,UAAU,mBAAtB,SACI,cAAC,IAAD,CAAW+B,SAAS,YAGxB,cAACD,EAAA,EAAD,CAAY9B,UAAU,mBAAtB,SACI,cAAC,IAAD,CAAc+B,SAAS,YAG3B,cAACD,EAAA,EAAD,CAAY9B,UAAU,oBAAtB,SACI,cAAC,IAAD,CAAc+B,SAAS,YAG3B,cAACD,EAAA,EAAD,CAAY9B,UAAU,wBAAtB,SACI,cAAC,IAAD,CAAa+B,SAAS,gBChBvBC,MAVf,WACE,OACE,sBAAKhC,UAAU,MAAf,UACG,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCQiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2578230f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport IconsButton from '@material-ui/core/IconButton';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport '../Style/header.css';\r\nfunction Header(){\r\n    return(\r\n        <div className=\"header\">\r\n\r\n            <div className=\"header-left\">\r\n                <IconsButton>\r\n                    <PersonIcon />\r\n                </IconsButton>\r\n            </div>\r\n            <div className=\"header-center\">\r\n                <img className=\"logo\" src=\"https://1000logos.net/wp-content/uploads/2018/07/tinder-logo.png\" />\r\n            </div>\r\n            <div className=\"header-right\">\r\n                <ForumIcon />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://tinder-backendss.herokuapp.com\",\r\n});\r\n\r\nexport default instance;","import React, { useState, useEffect } from 'react';\r\nimport TinderCard from 'react-tinder-card';\r\nimport '../Style/TinderCards.css';\r\nimport axios from '../axios';\r\nfunction TinderCards(){\r\n    const [people , setPeople] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const req= await axios.get(\"/tinder/cards\");\r\n\r\n            setPeople(req.data);\r\n        }\r\n\r\n        fetchData();\r\n    })\r\n\r\n    const swiped = (direction, nameToDelete) => {\r\n        console.log(\"removing : \" + nameToDelete);\r\n    };\r\n\r\n    \r\n    const outofFrame = (name) => {\r\n        console.log(name + \"left the Screen\");\r\n    };\r\n\r\n    return(\r\n        <div className=\"tindercard\">\r\n            <div className=\"tindercard_cardContainer\">\r\n                {people.map((person) => (\r\n                    <TinderCard\r\n                    className=\"swipe\"\r\n                    key={person.name}\r\n                    preventSwipe={[\"up\" , \"down\"]}\r\n                    onSwipe={(dir) => swiped(dir, person.name)}\r\n                    onCardLeftScreen={() => outofFrame(person.name)}\r\n                    >\r\n                    \r\n                    <div\r\n                    style={{ backgroundImage: `url(${person.imgUrl})` }}\r\n                    className=\"card\"\r\n                    >\r\n                        <h3>{person.name}</h3>\r\n\r\n                    </div>\r\n                        \r\n                    </TinderCard>\r\n                ))}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TinderCards;","import React from 'react';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport StarRateIcon from '@material-ui/icons/StarRate';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport '../Style/SwipeButton.css';\r\n\r\n\r\n\r\n\r\nfunction SwipeButton(){\r\n    return(\r\n        <div className=\"swipeButton\">\r\n            <IconButton className=\"swipeButton_repeat\">\r\n                <ReplyIcon fontSize=\"large\" />\r\n            </IconButton>\r\n\r\n            <IconButton className=\"swipeButton_left\">\r\n                <CloseIcon fontSize=\"large\" />\r\n            </IconButton>\r\n\r\n            <IconButton className=\"swipeButton_star\">\r\n                <StarRateIcon fontSize=\"large\" />\r\n            </IconButton>\r\n\r\n            <IconButton className=\"swipeButton_right\">\r\n                <FavoriteIcon fontSize=\"large\" />\r\n            </IconButton>\r\n\r\n            <IconButton className=\"swipeButton_lightning\">\r\n                <FlashOnIcon fontSize=\"large\" />\r\n            </IconButton>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SwipeButton;","import Header from './component/Header';\nimport TinderCard from './component/TinderCards';\nimport './App.css';\nimport SwipeButton from './component/SwipeButton';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Header />\n       <TinderCard />\n       <SwipeButton />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}